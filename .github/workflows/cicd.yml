env:
  DOCKER_BUILDKIT: "1"
  COMPOSE_DOCKER_CLI_BUILD: "1"
  BUILDKIT_PROGRESS: "plain"
  NO_SQUASH: ""
  RELEASABLE_REPOS: "^corpusops/"
  RELEASABLE_BRANCHES: "^(refs/heads/)?(master|main|workflows)$"
jobs:
  r:
    runs-on: ubuntu-20.04
    env: {IMG: "${{matrix.IMG}}", DFILE: "${{matrix.DFILE}}", DPATH: "${{matrix.DPATH}}",
          RELEASE: "${{matrix.RELEASE}}", BASE_IMAGE: "${{matrix.BASE_IMAGE}}"}
    steps:
      - name: Set vars
        run: |-
            if ( echo "$GITHUB_REF" | egrep -q "${RELEASABLE_BRANCHES}" ) \
            && ( echo "$GITHUB_REPOSITORY" | egrep -q "${RELEASABLE_REPOS}" )
            then releasable=true;else releasable=false;fi
            echo "::set-output name=releasable::$releasable"
            echo "::set-output name=silent::$(echo $silent)"
        id: v
      - uses: docker/login-action@v1
        with: {username: "${{ secrets.DOCKER_HUB_USERNAME }}", password: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"}
      - name: Activate docker experimental
        run: |-
          sudo bash -exc "service docker stop;python -c \"d='/etc/docker/daemon.json';\
          import json;c=json.load(open(d));c['experimental']=True;\
          open(d, 'w').write(json.dumps(c))\";systemctl restart docker"
      - uses: actions/checkout@v2
      - name: build & release
        run: set -ex;
             IMGV=${RELEASE};
             t=${IMG}:${IMGV};
             db() { docker build
              --build-arg BASE_IMAGE=${BASE_IMAGE}
              --build-arg RELEASE=${RELEASE}
              --build-arg BUILDKIT_INLINE_CACHE="1" -t ${3} -f ${1} ${2} "${@:4}"; };
             db ${DFILE} ${DPATH} ${t}-no-squash;docker tag ${t}-no-squash ${t};
             if [ "x${NO_SQUASH}" = "x" ];then db ${DFILE} ${DPATH} ${t} --squash;fi;
             if [ "x${{steps.v.outputs.releasable}}" = "xtrue" ];then for i in "";do docker push ${t}${i};done;fi;
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        RELEASE:
        - latest
        BASE_IMAGE: ["corpusops/ubuntu:20.04"]
        IMG: ["corpusops/ovh-backup"]
        DFILE: ["Dockerfile"]
        DPATH: ["."]
on:
  # push:
  # workflow_dispatch:
  # schedule: [{cron: '1 0 1,3,5,15,17,19 * *'}]

